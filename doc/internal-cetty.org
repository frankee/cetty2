


@startuml

abstract Channel {
}

abstract EventLoop {
}

class ChannelConfig {
}

class ChannelPipeline {
}

abstract ChannelHandlerContext {
}

class ChannelMessageHandlerContext<T> {
}

class ChannelMessageHeadLinkContext<T> {
}

class ChannelMessageTailLinkContext<T> {
}

class ChannelMessageContainer<T> {
}

class ChannelMessageTransfer<T> {
}

class ChannelHandler << (H, orchid) >> {
}

Channel <|-- EmbededChannel
Channel <|-- AsioSocketChannel
Channel <|-- AsioSocketServerChannel

AsioSocketChannel o-- AsioService
AsioSocketChannel *-- ChannelBuffer
AsioSocketChannel *-- AsioSocketChannelConfigure
AsioSocketServerChannel *-- AsioServerSocketChannelConfigure

Channel *-- ChannelConfig
Channel o-- EventLoop
Channel *-- ChannelPipeline

ChannelPipeline o-- EventLoop
ChannelPipeline "1" *-- "n" ChannelHandlerContext

ChannelHandlerContext o-- EventLoop
ChannelHandlerContext <|-- ChannelMessageHandlerContext<T>
ChannelHandlerContext <|-- ChannelMessageHeadLinkContext<T>
ChannelHandlerContext <|-- ChannelMessageTailLinkContext<T>

ChannelMessageHandlerContext<T> *-- ChannelHandler
ChannelMessageHandlerContext<T> *-- ChannelMessageTransfer<T>
ChannelMessageHandlerContext<T> *-- ChannelMessageContainer<T>

@enduml